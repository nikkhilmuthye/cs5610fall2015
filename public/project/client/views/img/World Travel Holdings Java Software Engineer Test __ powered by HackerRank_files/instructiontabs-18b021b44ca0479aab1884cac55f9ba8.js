HR.appController.addTemplate("backbone/templates/recruit/instructiontabs",function(obj){{var __t,__p="";Array.prototype.join}with(obj||{})__p+="",public_url?(__p+='\n<div class="container--flex">\n  <div class="text-center">\n    ',__p+=hide_tabs?'\n        <h2 class="headline">CodePair Environment</h2>\n    ':'\n        <h2 class="headline">HackerRank test-taking information</h2>\n        <div class="sub-headline">\n          <span class="icon2-questions"></span>\n          <span class="grey">Tips to help you take your best test on the HackerRank test-taking platform.\n          </span>\n      </div> <!-- .sub-headline -->\n    ',__p+='\n  </div>\n    <div class="to-go-top">\n        <a class="js-gototop" href="#top"><i class="icon--single icon-up-open"></i></a>\n    </div>\n    ',__p+=hide_tabs?'\n        <div class="white-grid-block main-content" style="width:85%;border: none">\n    ':'\n      <div class="white-grid-block main-content" style="width:85%">\n    ',__p+="\n"):(__p+="\n",__p+=in_modal?'\n<div class="mlA">\n':'\n<div class="container offset2" style="margin-top:63px">\n',__p+="\n"),__p+="\n\n    ",hide_tabs||(__p+='\n    <header class="page-title">\n        <ul class="nav-tabs nav">\n            ',baselink="info",public_url||(__p+='\n            <li id="tabinstruction" ',"instructions"==subpage&&(__p+='class="active" '),__p+=' ><a id="tabinstruction" class="js-tablink mRsmall" href="'+(null==(__t=baselink)?"":__t)+'/instruction"><i class="icon-list-bullet-small"></i> Instructions</a></li>\n            '),__p+='\n            <li id="tabui" ',"interface"==subpage&&(__p+='class="active" '),__p+=' ><a id="tabui" class="js-tablink mRsmall" href="'+(null==(__t=baselink)?"":__t)+'/interface"><i class="icon-monitor"></i> Interface</a></li>\n            <li id="tabenv" ',"environment"==subpage&&(__p+='class="active" '),__p+=' ><a id="tabenv" class="js-tablink mRsmall" href="'+(null==(__t=baselink)?"":__t)+'/environment"><i class="icon-keyboard"></i> Environment</a></li>\n            <li id="tabfaq" ',"faq"==subpage&&(__p+='class="active" '),__p+=' ><a id="tabfaq" class="js-tablink mRsmall" href="'+(null==(__t=baselink)?"":__t)+'/faq"><i class="icon-help-circled"></i> F.A.Q.</a></li>\n            ',in_modal&&(__p+='\n            <li class="no-tab pull-right">\n                <a href="" class="btn-list close" data-dismiss="modal" aria-hidden="true"><i class="icon2-close"></i></a>\n            </li>\n            '),__p+="\n        </ul>\n    </header>\n    "),__p+="\n    ",public_url||(__p+='\n    <div class="js-content-tabinstruction js-content ',"instructions"!=subpage&&(__p+="hidden"),__p+='">\n        <h3><span class="green-title customer-title-font-color">Test Instructions</span></h3>\n        <div class="plA mlA">'+(null==(__t=test.get("instructions"))?"":__t)+"</div>\n    </div>\n    "),__p+='\n    <div class="js-content-tabui js-content ',"interface"!=subpage&&(__p+="hidden"),__p+='">\n            <h3><span class="green-title customer-title-font-color">Test Interface</span></h3>\n            <div>\n                <a name="top"></a>\n                <span class="challengeslist_challenge-title green-title customer-title-font-color">Table of Contents</span>\n                <div class="boxholder" style="width: 60%;border: 1px solid #ddd;background-color: #eee;padding: 15px 0 15px 30px;">\n                    <ol class="mlL" style="line-height: 15px;">\n                        <li><a class="js-anchor" href="#browser" name="browser">Browser/internet recommendation</a></li>\n                        <li><a class="js-anchor" href="#testtaking" name="testtaking">Test-taking view</a></li>\n                        <li><a class="js-anchor" href="#disconnect" name="disconnect">Disconnections/re-logins</a></li>\n                        <li><a class="js-anchor" href="#pageload" name="pageload">Site/page does not load correctly</a></li>\n                        <li><a class="js-anchor" href="#coding" name="coding">Coding questions</a></li>\n                        <li><a class="js-anchor" href="#subjective" name="subjective">Subjective questions</a></li>\n                        <li><a class="js-anchor" href="#mcq" name="mcq">Multiple choice questions</a></li>\n                        <li><a class="js-anchor" href="#sectional" name="sectional">Sectional tests</a></li>\n                        <li><a class="js-anchor" href="#sudorank" name="sudorank">SudoRank tests</a></li>\n                        ',public_url&&(__p+='\n                        <li><a class="js-anchor" href="#sample" name="sample">Sample test</a></li>\n                        '),__p+='\n                    </ol>\n                </div>\n\n                <!-- browser -->\n                <div class="soft-divider mlA"></div>\n                <a name="browser"></a>\n                <h3>Browser/internet recommendation</h3>\n                <p class="msT">For the best test-taking experience, we recommend the latest version of Google Chrome/Chromium, Mozilla Firefox, or Internet explorer (v10 or later) browsers.</p>\n                <p class="msT">Take the test from a computer with a stable internet connection for the best experience.</p>\n\n\n                <!-- test taking -->\n                <div class="soft-divider mlA"></div>\n                <a name="testtaking"></a>\n                <h3>Test-taking view</h3>\n                <p class="msT">Once logged-in, the view you\'ll see will be similar to below.</p>\n                <img class="mlT" src="'+(null==(__t=HR.appController.getAssetPath("/testtaking01.png"))?"":__t)+'">\n                <p class="msT">The important things to note are:\n                 <ol class="mlL mlT">\n                    <li><strong>TIMER: </strong>This counts down to the end of the test. Keep track of this as you progress in the test, and make sure you move at an optimal speed.</li>\n                    <li><strong>QUESTION LIST: </strong>These are the questions that make up the test. The right columns show which are answered, and which remain to be answered.</li>\n                    <li><strong>DONE BUTTON: </strong>Press this when you\'ve answered all the questions, and would like to close the test. Once closed, you\'ll be taken to the feedback page.</li>\n                 </ol>\n                </p>\n                <p class="msT">When you open a question, you are presented with:\n                <img class="mlT" src="'+(null==(__t=HR.appController.getAssetPath("/testtaking02.png"))?"":__t)+'">\n                 <ol class="mlL mlT">\n                    <li><strong>QUICK NAVIGATION: </strong>The sidebar allows you to move between questions quickly.</li>\n                    <li><strong>ANSWER AREA: </strong>This is where you provide an answer. This will vary depending on the question type.</li>\n                 </ol>\n\n                <div class="alert alert-info mlT">\n                    <header>WHAT HAPPENS IF THE TIMER RUNS OUT?</header>\n                    <p>If the timer runs out while you\'re still attempting the test, the test will be automatically closed, and you will be taken to the feedback page.</p>\n                </div>\n\n\n                <!-- disconnect -->\n                <div class="soft-divider mlA"></div>\n                <a name="disconnect"></a>\n                <h3>Disconnections/re-logins</h3>\n                <p class="msT">If something goes wrong with your computer or your internet connection gets disconnected, your previously submitted answers will not be lost. They will remain safe on our servers. You can re-login on our website and continue coding from where you left.</p>\n                <p class="msT">However, the timer will remain running. Thus, make sure that you use a computer or a browser that you know works fine.</p>\n\n\n                <!-- pageload -->\n                <div class="soft-divider mlA"></div>\n                <a name="pageload"></a>\n                <h3>Site/page does not load correctly</h3>\n                <p class="msT">Sometimes an internal page may not load correctly, due to a network issue. Such issues can be fixed by refreshing your browser window.</p>\n\n\n                <!-- coding -->\n                <div class="soft-divider mlA"></div>\n                <a name="coding"></a>\n                <h3>Coding questions</h3>\n                <p class="msT">Your test may contain coding questions. They come in two types:\n                <ol class="mlL mlT">\n                    <li><strong>COMPLETE THE FUNCTION: </strong>In these type of coding questions, you only need to write the function body, and return the required value. Inputs are provided to the function as arguments.</li>\n                    <li><strong>WRITE COMPLETE CODE: </strong>These questions will require you to write complete code. Any input will be provided on STDIN, and your output has to be provided on STDOUT.</li>\n                 </ol>\n                </p>\n                <p class="msT">The coding area would look like this:</p>\n                <img class="mlT" src="'+(null==(__t=HR.appController.getAssetPath("/testtaking04.png"))?"":__t)+'">\n                <p class="msT">\n                <ul class="mlL mlT">\n                    <li>You can use the <em>Compile &amp; Test</em> button to try out your current solution, and see if provided test cases pass. You will be scored on the basis of the test cases that pass. There may be hidden test cases in questions, and the output for these will not be presented to you.</li>\n                    <li>Make sure you press "Submit" after you answer the question for it to be recorded.</li>\n                    <li>Your answers are auto-saved as draft at set intervals.</li>\n                    <li>For information on the languages our platform supports, and how to handle STDIN/STDOUT, see our <a href="/environment">environment page</a>.</li>\n                 </ul>\n                </p>\n                <div class="text-center mjA"><embed width="500px" height="320px" src="https://www.youtube.com/embed/0UqtoGENX8M?rel=0%22%20frameborder=%220%22"></div>\n                <div class="alert alert-info mlT">\n                    <p>Some companies only allow certain languages in the test, so you will only be allowed to code in these allowed languages.</p>\n                </div>\n\n\n\n                <!-- subjective -->\n                <div class="soft-divider mlA"></div>\n                <a name="subjective"></a>\n                <h3>Subjective questions</h3>\n                <p class="msT">Subjective questions are free-form questions. You may provide your answer in the text box provided. Your answers are auto-saved as draft at set intervals.</p>\n                <div class="alert alert-info mlT">\n                    <header>PRO TIP</header>\n                    <p>Make sure your answer is simple, clear, answers the question, and uses correct grammar.</p>\n                </div>\n\n\n                <!-- mcq -->\n                <div class="soft-divider mlA"></div>\n                <a name="mcq"></a>\n                <h3>Multiple choice questions</h3>\n                <p class="msT">Multiple choice questions come in two types:\n                <ol class="mlL mlT">\n                    <li><strong>MULTIPLE CHOICE: </strong>One of the answers is correct.</li>\n                    <li><strong>MULTIPLE ANSWER: </strong>One or more answers may be correct.</li>\n                 </ol>\n                 <br/>\n                Make sure you press "Submit" after you answer the question for it to be recorded.\n                </p>\n\n\n                <!-- Sections -->\n                <div class="soft-divider mlA"></div>\n                <a name="sectional"></a>\n                <h3>Sectional tests</h3>\n                <p class="msT">Some tests have sections, where you can only attempt one section at a time and proceed. Each section is provided a limited time, and any saved time from a previous section transfers to the next section.</p>\n                <img class="mlT" src="'+(null==(__t=HR.appController.getAssetPath("/testtaking03.png"))?"":__t)+'">\n                <p class="msT">The important things to note are:\n                 <ol class="mlL mlT">\n                    <li><strong>TIMER: </strong>This counts down to the end of the section (and not the test).</li>\n                    <li><strong>QUESTION LIST: </strong>Only currently active questions can be answered. Once you move past a section, you cannot go back to it.</li>\n                 </ol>\n                </p>\n\n                <!-- Sections -->\n                <div class="soft-divider mlA"></div>\n                <a name="sudorank"></a>\n                <h3>SudoRank tests</h3>\n                <p class="msT">Some tests are setup with access to SudoRank, the HackerRank task server interface. In these tests candidates can easily spawn up a server, obtain live shell access, and complete required tasks.</p>\n                <p class="msT">The important things to note are:\n                 <ol class="mlL mlT">\n                    <li>Server access is provided on live servers, along with login credentials.</li>\n                    <li>Depending on how the test is setup, access to certain commands may be limited.</li>\n                    <li>Once started, the task server is only accessible for the time setup. After this time, access will be severed, and reports generated.</li>\n                 </ol>\n                </p>\n\n\n                ',public_url&&(__p+='\n                <!-- Sample -->\n                <div class="soft-divider mlA"></div>\n                <a name="sample"></a>\n                <h3>Sample test</h3>\n                <p class="msT">If you\'re taking a test with coding questions, you can take our publicly accessible sample test to become comfortable with the interface.</p>\n                <p class="msT"> <a class="btn btn-green margin-large right" href="/tests/sample">Go to sample test</a></p>\n                '),__p+='\n\n            </div>\n    </div>\n\n    <div class="js-content-tabenv js-content ',"environment"!=subpage&&(__p+="hidden"),__p+='">\n    ',hide_tabs||(__p+='\n        <h3><span class="green-title customer-title-font-color">Execution Environment</span></h3>\n    '),__p+='\n        <div class="" id="languages"></div>\n        <h3><span class="green-title customer-title-font-color mjT">SudoRank Environment</span></h3>\n        <div>SudoRank servers are setup with following specifications:\n          <ul class="mdL mdT">\n          <li><strong>OS</strong>: Ubuntu Linux 14.04</li>\n          <li><strong>Access</strong>: Via web based shell, or via SSH login.</li>\n          <li><strong>Time for task</strong>: Customized in each test.</li>\n          </ul>\n        </div>\n    </div>\n\n    <style> li { margin-top: 0.7em;} body{font-size:90%} p {margin-top: 0.2em;}</style>\n    <div class="js-content-tabfaq js-content ',"faq"!=subpage&&(__p+="hidden"),__p+='">\n        <h3><span class="green-title customer-title-font-color">Frequently Asked Questions</span></h3>\n        <div class="plA">\n            <ol>\n                <li>\n                    <strong>What browser should I use for the best experience?</strong>\n                    <p/>For the best experience you should use the latest stable versions of Chrome, Firefox, or Internet Explorer. The site will not function satisfactority with IE9 and earlier.\n                </li>\n\n                <li>\n                    <strong>I lost internet connectivity in the middle of my test. What do I do now?</strong>\n                    <p/>The good news is all the work you have already submmitted would have been saved. They will remain safe on our servers. You can re-login on our website from the same computer or from another computer and continue coding from where you left. However the test timer will not stop ticking while you are offline. You can contact the HR who sent you the invite and tell them about your situation if you could not complete your test because of this reason. As a general guideline, you should test the computer you want to use prior to taking the test on it.\n                </li>\n\n                <li>\n                    <strong>Can I take the Sample Test more than once?</strong>\n                    <p/>Yes. You can attempt the sample test as many times as you want. You need to use different email addresses each time.\n                </li>\n\n                <li>\n                    <strong>A question does not load properly and I cannot see all images or widgets on the question page.</strong>\n                    <p/>If you are experiencing slow net speeds some components of the page may not load. Such issues are generally solved by refreshing your browser tab/window. Refreshing your browser tab while you are taking a test will not affect your flow. You will be brought back to exactly where you were and you can continue solving problems.\n                </li>\n\n                <li>\n                    <strong>My Java/C#/Scala code works in my local IDE, but throws compilation errors when I do Run Code in your interface.</strong>\n                    <p/>\n                    If you\'re using Java/C#/Scala, you have to call your main class as Solution. This is essential to get your code to run. Please do NOT use any package names in your code.</p>\n                </li>\n\n                <li>\n                    <strong>What are test cases? </strong>\n                    <p>Our platform runs your code against a certain number of testcases everytime you submit code. A test case consists of input data that is fed into your program, and the output expected from your program for that particular input. So, a test case succeeding means that your program produced correct output for that particular input, while a failure means it didn\'t produce the expected output (either wrong output or it took too long and was killed). A \'large\' test case means a test case with a large input. </p>\n                </li>\n\n                <li>\n		    <strong>After I have submitted answer to a question can I come back and change my submission? </strong>\n                    <p>Yes. You can navigate freely across the questions, and resubmit your solution to any question that is accessible by clicking on "Submit & Continue" multiple times. Please note that some tests have timed sections, and once a section time limit is reached, you will not be able to revisit questions in that section. But there is no limit on the number of times you can submit your answer to a question that you can view / edit.</p>\n                </li>\n\n                <li>\n                <strong>I\'m forced to take the test in full screen mode. How can I escape from this?</strong>\n                <p>Some tests have the full screen mode enabled for them in which you\'ll be automatically taken to a full screen as you attempt the test. You can\'t take these tests without the full screen. However, if you wish to navigate to another window/browser tab during the test, you can do so by pressing "Esc" or Alt+Tab. The recruiter will be aware of how many times this was done and for how long you were out of the full screen.</p>\n                </li>\n\n		<li>\n		<strong>Does your editor have intellisense-like autocomplete?</strong>\n 		<p>Yes; we have intelligent auto-complete similar to what is found in modern editors such as Eclipse or Visual Studio. Auto-complete will automatically trigger in languages like Java and C# at specific syntax points - like after you type "." in "System.out." You can also trigger it manually at any time using the "Ctrl-Space" key combination.</p>\n		</li>\n\n                <li>\n                    <strong>How can I debug my program? </strong>\n                    <p>You can debug your program by printing debug statements to STDOUT. For questions that need you to write the full program your debug output will appear in the section called <em>\'Your Output\'</em>. In such cases you should remember to remove all your debug statements before submitting your solution, as the entire output will be matched with the expected output and your program likely will not pass the test cases. For questions that expect you to complete a function, all your print statements will be captured separately in an area called <em>\'Debug Output\'</em>, and they will be ignored while comparing your output with expected output.</p> <p> Many problems also allow you to give you an option to <em>\'Test against custom input\':</em> you can use this option to specify your own input values to run your test against. When you select this checkbox no other test cases will be executed. </p>\n                </li>\n\n                <li>\n                    <strong>Time Limit Exceeded? </strong>\n                    <p>We look for optimal algorithms in your solutions. Every problem has been set a timelimit with respect to its optimal solution. If your code could not produce the required output within the set time limit, you get a \'Time Limit Exceeded\' error. Test cases get progressively larger, so it is not uncommon for a naive solution to pass the first few (smaller) test cases and then falter when confronted with the bigger ones.</p>\n                </li>\n\n                <li>\n                    <strong>Wrong Answer? </strong>\n                    <p>Your logic is wrong, or you have formatting issues. Make sure that the output format is exactly the same as specified in the problem statement. Check for extra/missing whitespaces/newlines/debug output statements. If a few test cases have passed, that probably means some of the later test cases have edge cases that your code is not handling. Think about every possible edge case within the problem specifications (you will never be given invalid input), and handle them. </p>\n\n                    <p>If you\'re using Java/Clojure/Scala, please ensure that you follow the appropriate class/package naming guidelines mentioned above. These are essential to get your code to run.</p>\n                </li>\n\n                <li id="stdin">\n                    <strong>STDIN and STDOUT</strong>\n                    <p>In most problems, you would read input from <code>STDIN</code> (Standard Input) and write output to <code>STDOUT</code> (Standard Output). Different languages have different methods of accessing <code>STDIN</code> and <code>STDOUT</code>. Please refer the sample codes below for the most common (possibly naive) methods.</p>\n                </li>\n                <li>\n            <strong>How do I read from STDIN and write to STDOUT in various languages?</strong>\n            <p/>This is best explained with a simple problem statement and solutions in different languages.\n            <p/><br/>\n            <h3>Problem Statement</h3>\n            <p>\n                Write a program that adds two numbers prints the sum to STDOUT. Read the input from STDIN. The first line of your input will contain an integer (N) that tells you how many more lines there are in the input. Each of the subsequent N lines contain 2 integers). You need to print the sum of each pair on a separate line of STDOUT.\n            </p>\n	    <br/>\n            <p class="fnt-wt-600">Sample Input</p>\n            <pre>\n3\n1 5\n3 10\n999 -34343</pre>\n        <p/>\n        <p class="fnt-wt-600">Sample Output</p>\n        <pre>\n6\n13\n-33344\n        </pre>\n\n        <br/><h3>Solution</h3><br/>\n        <p class="fnt-wt-600">C</p>\n        <pre><xmp>#include <stdio.h>\nint main () {\n    int n, i, a, b;\n\n    scanf("%d", &n);\n    for (i = 0; i < n; ++i) {\n        scanf("%d %d", &a, &b);\n        printf("%d\\n", a+b);\n    }\n}</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">C++</p>\n        <pre><xmp>#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++) {\n        int a, b;\n        cin >> a >> b;\n        cout << a+b << "\\n";\n    }\n\n    return 0;\n}</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">C#</p>\n        <pre><xmp>using System;\nusing System.IO;\n\nclass Solution {\n    static void Main(String[] args) {\n        int n = Convert.ToInt32(Console.ReadLine());\n        for(int t = 0; t < n; t++) {\n            String str = Console.ReadLine();\n            String[] strArr = str.Split();\n            int a = Convert.ToInt32(strArr[0]);\n            int b = Convert.ToInt32(strArr[1]);\n            Console.WriteLine(a+b);\n        }\n    }\n}</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Java</p>\n        <pre><xmp>\nimport java.io.*;\nimport java.util.*;\n\nclass Solution\n{\n    public static void main(String [] args) throws Exception\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for(int t = 0; t < n; t++) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            System.out.println(a+b);\n        }\n    }\n}\n</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Objective C</p>\n        <pre><xmp>#import <Foundation/Foundation.h>\n\nint main (int argc, const char * argv[]) {\n    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n    int t, a,b;\n    scanf("%d", &t);\n    while(t--)\n    {\n        scanf("%d %d", &a, &b);\n        printf("%d\\n", a + b);\n    }\n    [pool drain];\n    return 0;\n}</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Python</p>\n        <pre><xmp>n = int(raw_input())\nfor i in range(0,n):\n    a, b = raw_input().split()\n    print int(a) + int(b)</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Python 3</p>\n        <pre><xmp>n = int(input())\nfor i in range(n):\n    a, b = input().strip().split(\' \')\n    print (int(a) + int(b))</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Ruby</p>\n        <pre><xmp>n = gets.to_i\n(0...n).each do |i|\n    lis = gets.strip.split(" ")\n    a = lis[0].to_i\n    b = lis[1].to_i\n    puts a + b\nend</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">PHP</p>\n        <pre><xmp><?php\n$handle = fopen ("php://stdin","r");\n$t = fgets($handle);\nfor($i=0; $i<$t; $i++)\n{\n    $lis = split(\' \', fgets($handle));\n    print($lis[0] + $lis[1]) . "\\n";\n}\nfclose($handle);\n?></xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Javascript</p>\n        <pre><xmp>\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\'ascii\');\n\nvar __input_stdin = "";\nvar __input_stdin_array = "";\nvar __input_currentline = 0;\n\nprocess.stdin.on(\'data\', function (data) {\n    __input_stdin += data;\n});\n\nprocess.stdin.on(\'end\', function () {\n    __input_stdin_array = __input_stdin.split("\\n");\n    var res;\n    var n = parseInt(__input_stdin_array[__input_currentline].trim(), 10);\n    __input_currentline += 1;\n    for (var i = 0; i<n;i++) {\n        var _line = __input_stdin_array[__input_currentline].trim();\n        __input_currentline += 1;\n        var line = _line.split(" ");\n        var _a = parseInt(line[0]);\n        var _b = parseInt(line[1]);\n        res = _a + _b;\n        process.stdout.write(""+res+"\\n");\n    }\n});</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Clojure</p>\n        <pre><xmp>(use \'[clojure.string :only (split triml)])\n(def n (Integer/parseInt (read-line)))\n\n(loop [i 0]\n  (when (< i n)\n    (def a (read-line))\n    (def new (split a #"\\s+"))\n    (println ( + (Integer/parseInt (get new 0)) (Integer/parseInt (get new 1)) ))\n    (recur (inc i))\n))</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Perl</p>\n        <pre><xmp>$n = <>;\nfor($i=0; $i<$n; $i++)\n{\n    $lis = <>;\n    @ll = split(\' \', $lis);\n    print $ll[0] + $ll[1];\n    print "\\n";\n}</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">C-Sharp/Haskell</p>\n        <pre><xmp>import Control.Monad\n\nmain :: IO ()\nmain = do\n  n <- readLn :: IO Int\n  str <- replicateM n getLine\n  let\n    ans = map (sum. map read. words) str\n  mapM_ print ans</xmp></pre>\n        <br>\n        <p class="fnt-wt-600">Erlang</p>\n        <pre><xmp>-module(solution).\n\n-export([main/0]).\n\nmain() ->\n    {ok, [N]} = io:fread("", "~d"),\n    test(N).\n\ntest(0) -> ok;\ntest(N) ->\n    {ok, [A, B]} = io:fread("", "~d ~d"),\n    io:fwrite("~w~n", [(A + B)]),\n    test(N-1).\n</xmp></pre>\n<br>\n<p class="fnt-wt-600">Go Lang</p>\n<pre><xmp>package main\nimport "fmt"\n\nfunc main() {\n  var n int\n  var a int\n  var b int\n  fmt.Scan(&n)\n\n  for i := 0; i < n; i++ {\n    var sum int\n    fmt.Scan(&a,&b)\n    sum = a+b\n    fmt.Println(uint(sum))\n  }\n}</xmp></pre>\n<br>\n<p class="fnt-wt-600">Groovy</p>\n<pre><xmp>BufferedReader br = new BufferedReader(new InputStreamReader(System.in))\ndef a,b, res,line\ndef n = Integer.parseInt(br.readLine())\nfor (int i = 0; i < n; i++) {\n    line = br.readLine()\n    def (_a,_b) = line.split(\' \')\n    a = Integer.parseInt(_a)\n    b = Integer.parseInt(_b)\n    res = a+b\n    println res\n}</xmp></pre>\n<br>\n<p class="fnt-wt-600">Scala</p>\n<pre><xmp>object Solution extends App {\n  val n = readInt\n  //recommended\n  (1 to n).map(i => readLine.split(" ").map(_.toInt).sum).foreach(println)\n\n  /*\n    another way\n    for (i <- 1 to n) {\n    val Array(a, b) = readLine.split(" ").map(_.toInt)\n    println(a + b)\n  }\n  */\n}</xmp></pre>\n</ol>\n        </div>\n        </div>\n    </div>\n',public_url&&(__p+="\n  </div>\n"),__p+="\n</div>\n";return __p});